#!/usr/bin/python
import os,sys
from datetime import datetime, timedelta

from arsoft.nagios import NagiosPlugin, OK, WARNING, CRITICAL, UNKNOWN
from arsoft.openvpn import StatusFile, ConfigFile, Config

## Create the plugin option
np = NagiosPlugin(must_threshold=False)
np.add_arg('n', 'name', 'name of the VPN configuration')
np.add_arg('c', 'clients', 'number of clients required (server only).', default=0, required=0)

## This starts the actual plugin activation
np.activate()

config = Config()
if not config.get_config_file(np['name']):
    exit_code = CRITICAL
    exit_message = 'VPN %s is not configured.' % (str(np['name']))
elif not config.is_running(np['name']):
    exit_code = CRITICAL
    exit_message = 'VPN %s is not running.' % (str(np['name']))
else:
    now = datetime.now()
    
    config_file = ConfigFile(config_name=np['name'])
    status_file = StatusFile(config_file=config_file)
    if config_file.client:
        np.add_value('sent', has_argument=False)
        np.add_value('received', has_argument=False)
        
        stats = status_file.statistics
        np.set_value('sent', stats['TCP/UDP write bytes'])
        np.set_value('received', stats['TCP/UDP read bytes'])

        delta = now - status_file.last_update
        if delta > timedelta(minutes=5):
            exit_code = WARNING
            exit_message = 'status has not been since %s' % (str(status_file.last_update))
        else:
            (exit_code, exit_message) = np.check_values()

        if exit_code == OK:
            exit_message = 'Connected'
    elif config_file.server:
        np.add_value('numclients', has_argument=False)
        
        if np['clients'] is not None:
            np.set_value_range('numclients', warning=(np['clients']), critical=None)
        np.add_value('clients', has_argument=False)
        np.add_value('routingtable', has_argument=False)

        np.set_value('routingtable', status_file.routing_table)
        np.set_value('clients', status_file.connected_clients)
        np.set_value('numclients', len(status_file.connected_clients))

        delta = now - status_file.last_update
        if delta > timedelta(minutes=5):
            exit_code = WARNING
            exit_message = 'status has not been since %s' % (str(status_file.last_update))
        else:
            (exit_code, exit_message) = np.check_values()

        if exit_code == OK:
            exit_message = '%i clients' % (len(status_file.connected_clients))
    else:
        exit_code = CRITICAL
        exit_message = 'VPN %s configuration is neither client nor server.' % (str(np['name']))

np.nagios_exit(exit_code, exit_message)
