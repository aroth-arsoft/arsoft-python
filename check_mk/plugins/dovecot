#!/usr/bin/python
# -*- coding: utf-8 -*-
# kate: space-indent on; indent-width 4; mixedindent off; indent-mode python;

from arsoft.utils import runcmdAndGetData
from arsoft.timestamp import strptime_as_timestamp
from arsoft.check_mk import *
import re
import os
import errno
import time
import socket

class dovecot_check_mk_plugin(object):

    DOVECOT_BIN = '/usr/bin/dovecot'
    DOVECOT_SBIN = '/usr/sbin/dovecot'
    VERSION_RE = re.compile(r'^(?P<version>[0-9]+\.[0-9]+\.[0-9]+)\s*\(?(?P<gitrev>[0-9a-fA-F]+)?\)?')
    # the following statistics are available:
    #STATS_SECTIONS = ['command', 'user', 'domain', 'ip', 'global']
    # But these include too much data:
    #   command: contains stats for each IMAP command
    #   user: contains stats for each user
    #   domain: contains stats for each hosted domain
    #   ip: contains stats for each network interface used by dovecot
    # For the time being we stick to the global stats
    STATS_SECTIONS = ['global']
    STATS_SOCKET = '/var/run/dovecot/stats'
    PIDFILE = '/var/run/dovecot/master.pid'

    def __init__(self):
        self._version = ''
        self._gitrev = ''
        self._stats_data = {}
        self._got_statistics = False
        self._is_enabled = False
        self._pid = 0
        self._running = False

        self._get_version()
        self._get_daemon_status()

    def _get_version(self):
        if os.path.isfile(self.DOVECOT_SBIN):
            (sts, stdoutdata, stderrdata) = runcmdAndGetData([self.DOVECOT_SBIN, '--version'])
        elif os.path.isfile(self.DOVECOT_BIN):
            (sts, stdoutdata, stderrdata) = runcmdAndGetData([self.DOVECOT_BIN, '--version'])
        else:
            sts = 2
        if sts == 0:
            lines = stdoutdata.splitlines()
            if lines:
                mo = self.VERSION_RE.match(lines[0])
                if mo:
                    mogrp = mo.groupdict()
                    self._version = mo.group('version') if 'version' in mogrp else ''
                    self._gitrev = mo.group('gitrev') if 'gitrev' in mogrp else ''

    def _get_daemon_status(self):
        if not self._version:
            return
        if has_systemd():
            self._is_enabled = systemd_is_enabled('puppet')
            self._pid, self._running = systemd_status('dovecot')
        else:
            self._is_enabled = is_debian_service_enabled('puppet')
            self._pid, self._running = check_running(self.PIDFILE)

    def _print_statistics(self):
        try:
            sock = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
            sock.connect(self.STATS_SOCKET)
            for section in self.STATS_SECTIONS:
                sock.send('EXPORT\t%s\n' % section)
                data = sock.recv(4096)
                print(section)
                print(data)
            sock.close()
        except socket.error:
            pass

    def status(self):
        if self._version:
            print("<<<dovecot:sep(9)>>>")
            print('daemon')
            print('version\tgitrev\tpid\tenabled\trunning')
            print('%s\t%s\t%i\t%i\t%i' % (self._version, self._gitrev, self._pid, self._is_enabled, self._running) )
            self._print_statistics()

if __name__ == "__main__":
    pl = dovecot_check_mk_plugin()
    pl.status()
 
