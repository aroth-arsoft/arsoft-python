#!/usr/bin/python
# -*- coding: utf-8 -*-
# kate: space-indent on; indent-width 4; mixedindent off; indent-mode python;

from arsoft.crypto.utils import check_mk_cert_file_info, check_mk_crl_file_info
import os
import re

class nginx_cert_mk_check_plugin(object):

    def __init__(self):
        self.re_key_value = re.compile(r'\s*(?P<key>[a-zA-Z_]+)\s+(?P<value>.+);$')
        self.certificate_files = {}
        self.certificate_files[None] = []

        sites_enabled_dir = '/etc/nginx/sites-enabled'
        if os.path.isdir(sites_enabled_dir):
            for f in os.listdir(sites_enabled_dir):
                (base, ext) = os.path.splitext(f)
                if ext != '.conf':
                    continue
                fullname = os.path.join(sites_enabled_dir, f)
                self._parse_config_file(fullname)

    def _parse_config_file(self, filename):
        server_name = None
        server_port = None
        with open(filename, 'r') as f:
            for line in f:
                m = self.re_key_value.match(line)
                if m:
                    key = m.group('key')
                    value = m.group('value')
                    if key == 'server_name':
                        server_name = value
                    elif key == 'listen':
                        if ' ' in value:
                            elems = value.split(' ')
                        else:
                            elems = [value]
                        for v in elems:
                            if ':' in v:
                                (addr, port) = v.split(':',1)
                                try:
                                    server_port = int(port)
                                except ValueError:
                                    pass
                            else:
                                try:
                                    server_port = int(v)
                                except ValueError:
                                    pass
                    elif key == 'ssl_certificate':
                        server_key = '%s:%i' % (server_name if server_name else 'localhost', server_port if server_port else 80)
                        if not server_key in self.certificate_files:
                            self.certificate_files[server_key] = []
                        self.certificate_files[server_key].append(value)
            f.close()

    def status(self):
        for server_name, cert_files in self.certificate_files.iteritems():
            for cert_file in cert_files:
                check_mk_cert_file_info(cert_file, prefix=server_name)

if __name__ == "__main__":
    print("<<<nginx_cert:sep(59)>>>")
    pl = nginx_cert_mk_check_plugin()
    pl.status()



