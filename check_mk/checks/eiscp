#!/usr/bin/env python
# Check_MK eiscp Plugin - Get DMI baseboard information.
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
from arsoft.check_mk import check_state

def inventory_eiscp_status(checkname, info):
    ret = []
    if len(info) > 1:
        ret.append( ('status', None) )
    return ret

def check_eiscp_status(item, params, info):

    state = check_state()
    data = {}

    for line in info:
        if len(line) < 2:
            continue
        key = line[0]
        if key in ['input']:
            data[key] = line[1]
        else:
            data[key] = saveint(line[1])

    if item == 'status':
        power = data.get('power', 0)
        mute = data.get('mute', 0)
        sleep = data.get('sleep', 0)
        if 'volume' in data:
            volume = data.get('volume', 0)
        elif 'master_volume' in data:
            volume = data.get('master_volume', 0)

        state.append('Power %s' % ('on' if power != 0 else 'off'))
        state.append('Mute %s' % ('on' if mute != 0 else 'off'))
        if 'input' in data:
            state.append('Input %s' % (data['input']))
        state.append('Sleep off' if sleep == 0 else 'Sleep %i minutes' % sleep)
        state.append('Volume %i' % (volume))

        state.perfdata.append( ('power', power ) )
        state.perfdata.append( ('mute', mute ) )
        state.perfdata.append( ('sleep', sleep ) )
        state.perfdata.append( ('volume', volume ) )

        if len(state.messages) == 0:
            state.warning('Unknown status')
    else:
        state.unknown('item %s unknown' % (item))

    return state.return_value

# declare the check to Check_MK.
check_info['eiscp'] = {
    'check_function':            check_eiscp_status,
    'inventory_function':        inventory_eiscp_status,
    'service_description':       'eISCP',
    'group':                     'eISCP',
    'has_perfdata':              True,
}
