#!/usr/bin/python

import os
import argparse
import sys
import xmpp

(python_major, python_minor, python_micro, python_releaselevel, python_serial) = sys.version_info
if int(python_major) < 3: # check for version < 3
	from ConfigParser import ConfigParser
else:
	from configparser import ConfigParser

class jabbersend:
	def __init__(self):
		self.verbose = False
		
	def main(self):
		#=============================================================================================
		# process command line
		#=============================================================================================
		parser = argparse.ArgumentParser(description='send messages using jabber')
		parser.add_argument('--configfile', dest='configfile', help='input config file')
		parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='enable verbose output.')
		parser.add_argument('-m', '--message', dest='message', help='message text', metavar='MSG')
		parser.add_argument('-f', '--from', dest='sender', help='sender name')
		parser.add_argument('-t', '--to', dest='recipient', help='recipient name')
		parser.add_argument('-p', '--password', dest='password', help='password for sender')

		args = parser.parse_args()
		
		sender = None
		recipient = None
		password = None

		if args.configfile:
			config = ConfigParser.ConfigParser()
			config.read(args.configfile)

			sender = config.get('General', 'From', '') 
			recipient = config.get('General', 'To', '') 
			password = config.get('General', 'Password', '') 
		
		if args.sender:
			sender = args.sender
		if args.recipient:
			recipient = args.recipient
		if args.password:
			password = args.password
		if args.message:
			message = args.message
		else:
			message = sys.stdin.read()
			
		if not message:
			sys.stderr.write('No message given.\n') 
			sys.exit(1)
		if not sender:
			sys.stderr.write('No sender specified.\n') 
			sys.exit(1)
		if not recipient:
			sys.stderr.write('No recipient specified.\n') 
			sys.exit(1)

		self.send(sender, password, recipient, message)

	def send(self, sender, password, recipient, message):
		jid=xmpp.protocol.JID(sender)
		cl=xmpp.Client(jid.getDomain(),debug=[])
		cl.connect()
		if not cl.auth(jid.getNode(),password):
			raise IOError('Can not auth with server.')

		cl.send( xmpp.Message( recipient, message ) )
		cl.disconnect()

if __name__ == "__main__":
	app =  jabbersend()
	app.main()
