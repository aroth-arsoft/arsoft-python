#!/usr/bin/python
import os,sys
from datetime import datetime, timedelta

from arsoft.nagios import NagiosPlugin, OK, WARNING, CRITICAL, UNKNOWN
from arsoft.kernel_module import kernel_module

## Create the plugin option
np = NagiosPlugin(must_threshold=False)
np.add_value('modules')
np.add_arg('w', 'warning', 'list of the modules to issue a warning status when not loaded.', required=0, action='append')
np.add_arg('c', 'critical', 'list of the modules to issue a critical status when not loaded.', required=0, action='append')

## This starts the actual plugin activation
np.activate()

modlist = kernel_module.get_module_list().keys()
np.set_value('modules', modlist)

ok_modules = []
warning_modules = []
critical_modules = []

if np['warning']:
    for mod in np['warning']:
        if len(mod) > 0:
            if not kernel_module.is_module_loaded(mod):
                warning_modules.append(mod)
            else:
                ok_modules.append(mod)

if np['critical']:
    for mod in np['critical']:
        if len(mod) > 0:
            if not kernel_module.is_module_loaded(mod):
                critical_modules.append(mod)
            else:
                ok_modules.append(mod)

if len(critical_modules) > 0:
    exit_code = CRITICAL
    exit_message = ','.join(critical_modules) + ' not loaded.'
elif len(warning_modules) > 0:
    exit_code = WARNING
    exit_message = ','.join(warning_modules) + ' not loaded.'
else:
    exit_code = OK
    if len(ok_modules) > 0:
        exit_message = ','.join(ok_modules) + ' loaded.'
    else:
        exit_message = None

np.nagios_exit(exit_code, exit_message)
