#!/usr/bin/python

import os

EDSKMGR_TRIGGER=None
DEVTYPE=None
EDSKMGR_DISK_TAGS=[]

ACTION=os.environ['ACTION'] if 'ACTION' in os.environ else 'add'
if 'DEVTYPE' in os.environ:
    DEVTYPE=os.environ['DEVTYPE']
if 'EDSKMGR_TRIGGER' in os.environ:
    EDSKMGR_TRIGGER=os.environ['EDSKMGR_TRIGGER']
if 'EDSKMGR_DISK_TAGS' in os.environ:
    EDSKMGR_DISK_TAGS=os.environ['EDSKMGR_DISK_TAGS'].split(',')

if ACTION == 'add':
    if DEVTYPE == 'partition':
        # A new partition has been added/recognized, but need to check if this was triggered
        # by the arsoft-backup script and if this is a backup disk
        if EDSKMGR_TRIGGER == 'arsoft-backup' and 'arsoft-backup' in EDSKMGR_DISK_TAGS:
            # partition was added and arsoft-backup script is waiting for it. So mount
            # the partition if it's not yet mounted
            from arsoft.disks.edskmgr import ExternalDiskManager
            edskmgr = ExternalDiskManager()
            edskmgr.load_config()
            (disk_obj, dev_obj, disk_tags) = edskmgr.udev_hook_initialize()
            if disk_obj and dev_obj:
                if not dev_obj.is_mounted:
                    print('Mount partition of backup disk %s' % (dev_obj))
                    dev_obj.mount()
    elif DEVTYPE == 'disk':
        # A new disk has been added, but need to check if this was triggered by the
        # arsoft-backup script or not
        if EDSKMGR_TRIGGER != 'arsoft-backup' and 'arsoft-backup' in EDSKMGR_DISK_TAGS:
            # it's not triggerd by the arsoft-backup script, so we can assume this
            # event was triggered manually and we can eject this disk again. This
            # happens when the external backup disks are exchanged but we can shut it
            # down to safe some power
            edskmgr = ExternalDiskManager()
            edskmgr.load_config()
            (disk_obj, dev_obj, disk_tags) = edskmgr.udev_hook_initialize()
            if disk_obj:
                edskmgr.remove_disk(disk_obj)
