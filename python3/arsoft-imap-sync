#!/usr/bin/python3
# -*- coding: utf-8 -*-
# kate: space-indent on; indent-width 4; mixedindent off; indent-mode python;

import os, sys
import argparse
from arsoft.offlineimap import OfflineImap

class ARSoftImapSync(object):

    def __init__(self):
        self._verbose = False
        self._script_name = os.path.basename(__file__)
        self._offline_imap = None
        self._root_dir = None
        self._cache_dir = '/var/cache/arsoft-imap-sync'


    def main(self, argv=None):

        #=============================================================================================
        # process command line
        #=============================================================================================
        parser = argparse.ArgumentParser(description='sync mail between imap servers')
        parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='enable verbose output of this script.')
        parser.add_argument('-d', '--debug', dest='debug', action='store_true', help='enable debugging of this script.')
        parser.add_argument('-R', '--root-directory', dest='root_dir', default='/', help='specifies the root directory for operations.')
        parser.add_argument('-C', '--config-directory', dest='config_dir', default='/etc/arsoft/imapsync', help='name of the directory containing the imap sync configuration.')

        args = parser.parse_args()

        ret = 0
        self._verbose = args.verbose
        self._debug = args.debug
        self._root_dir = args.root_dir

        if self._root_dir is not None and self._root_dir != '/':
            config_dir = os.path.normpath(self._root_dir + args.config_dir)
            cache_dir = os.path.normpath(self._root_dir + self._cache_dir)
        else:
            config_dir = os.path.normpath(args.config_dir)
            cache_dir = os.path.normpath(self._cache_dir)
        account_file = os.path.join(config_dir, 'accounts')
        private_dir = os.path.join(cache_dir, 'account-data')

        if not os.path.isdir(cache_dir):
            os.mkdir(cache_dir)
        if not os.path.isdir(private_dir):
            os.mkdir(private_dir)

        self._offline_imap = OfflineImap(private_dir=private_dir, verbose=self._verbose)
        self._offline_imap.readConfig(account_file)
        if self._verbose:
            for acc in self._offline_imap.account_list:
                print(acc)
        if not self._offline_imap.run():
            sys.stderr.write('Failed to sync.\n')
            ret = 1
        return ret

if __name__ == "__main__":
    app = ARSoftImapSync()
    sys.exit(app.main(sys.argv))
